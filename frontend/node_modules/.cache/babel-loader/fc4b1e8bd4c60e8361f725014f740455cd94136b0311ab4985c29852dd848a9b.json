{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salom\\\\Desktop\\\\hotel-finder\\\\frontend\\\\src\\\\components\\\\PlaceList.jsx\";\n// import React, { useEffect, useContext} from \"react\";\n// import PlaceFinder from \"../apis/PlaceFinder\";\n// import Container from \"react-bootstrap/Container\"\n// import Row from \"react-bootstrap/Row\";\n// import Col from \"react-bootstrap/Col\";\n// import Place from '../components/Place';\n// import { PlaceContext } from '../context/PlaceContext.js'\n\n// const PlaceList = () => {\n\n//   const {places, setPlaces } = useContext(PlaceContext)\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const {response} = await PlaceFinder.get(\"/\");\n//         console.log(response);\n//         setPlaces(response);\n//       } catch (err) {\n//         console.log(err.message)\n//       }\n//     };\n\n//     fetchData();\n//   }, [setPlaces]);\n//     return (\n//           <Container>\n//         <div className=\"products\">\n//             <Row>\n//               {places && places.map((place, index) => (\n//                 <Col key={index} sm={6} md={4} lg={3} className=\"mb-3 pt-2\">\n//                   <Place place={place} />\n//                 </Col>\n//               ))}\n//             </Row>\n//             </div>\n//         </Container>\n//     );\n//   };\n\n// export default PlaceList\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaceList = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PlaceList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c = PlaceList;\nexport default PlaceList;\nvar _c;\n$RefreshReg$(_c, \"PlaceList\");","map":{"version":3,"names":["React","PlaceList"],"sources":["C:/Users/Salom/Desktop/hotel-finder/frontend/src/components/PlaceList.jsx"],"sourcesContent":["// import React, { useEffect, useContext} from \"react\";\r\n// import PlaceFinder from \"../apis/PlaceFinder\";\r\n// import Container from \"react-bootstrap/Container\"\r\n// import Row from \"react-bootstrap/Row\";\r\n// import Col from \"react-bootstrap/Col\";\r\n// import Place from '../components/Place';\r\n// import { PlaceContext } from '../context/PlaceContext.js'\r\n\r\n\r\n// const PlaceList = () => {\r\n\r\n//   const {places, setPlaces } = useContext(PlaceContext)\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const {response} = await PlaceFinder.get(\"/\");\r\n//         console.log(response);\r\n//         setPlaces(response);\r\n//       } catch (err) {\r\n//         console.log(err.message)\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [setPlaces]);\r\n//     return (\r\n//           <Container>\r\n//         <div className=\"products\">\r\n//             <Row>\r\n//               {places && places.map((place, index) => (\r\n//                 <Col key={index} sm={6} md={4} lg={3} className=\"mb-3 pt-2\">\r\n//                   <Place place={place} />\r\n//                 </Col>\r\n//               ))}\r\n//             </Row>\r\n//             </div>\r\n//         </Container>\r\n//     );\r\n//   };\r\n  \r\n\r\n// export default PlaceList\r\n\r\n\r\nimport React from 'react'\r\n\r\nconst PlaceList = () => {\r\n  return (\r\n    <div>\r\n      <h1>PlaceList</h1></div>\r\n  )\r\n}\r\n\r\nexport default PlaceList"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,SAAS,GAAG,MAAM;EACtB,oBACE;IAAA,uBACE;MAAA,UAAI;IAAS;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QAAM;AAE9B,CAAC;AAAA,KALKA,SAAS;AAOf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}