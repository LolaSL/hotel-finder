{"ast":null,"code":"// import React, { useState } from \"react\";\n// import ReactQuill from \"react-quill\";\n// import \"react-quill/dist/quill.snow.css\";\n// import Button from \"react-bootstrap/Button\";\n// import axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import moment from \"moment\";\n\n// const Create = () => {\n//   const state = useLocation().state;\n//   const [value, setValue] = useState(state?.title || \"\");\n//   const [title, setTitle] = useState(state?.description || \"\");\n//   const [file, setFile] = useState(null);\n//   const [where_to_stay, setWhereToStay] = useState(state?.where_to_stay || \"\");\n//   const navigate = useNavigate();\n\n//   const upload = async () => {\n//     try {\n//       const formData = new FormData();\n//       formData.append(\"file\", file);\n//       const res = await axios.post(\n//         \"http://localhost:8090/api/v1/upload\",\n//         formData\n//       );\n//       return res.data;\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n//   const handleClick = async (e) => {\n//     e.preventDefault();\n//     const imgUrl = await upload();\n//     try {\n//       state\n//         ? await axios.put(`http://localhost:8090/api/v1/places${state.id}`, {\n//             title,\n//             where_to_stay,\n//             description: value,\n\n//             image_url1: file ? imgUrl : \"\",\n//           })\n//         : await axios.post(`http://localhost:8090/api/v1/places/`, {\n//             title,\n//             where_to_stay,\n//             description: value,\n\n//             image_url1: file ? imgUrl : \"\",\n//             created_at: moment(Date.now()).format(\"YYYY-MM-DD HH:mm:ss\"),\n//           });\n//       navigate(\"/\");\n//     } catch (err) {\n//       console.log(err);\n//     }\n//   };\n\n//   return (\n//     <div className=\"create-place\">\n//       <div className=\"content\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           onChange={(e) => setTitle(e.target.value)}\n//         />\n//         <input\n//           type=\"text\"\n//           placeholder=\"Where to stay\"\n//           onChange={(e) => setWhereToStay(e.target.value)}\n//         />\n//         <div className=\"editorContainer\">\n//           <ReactQuill\n//             className=\"editor\"\n//             theme=\"snow\"\n//             value={value}\n//             onChange={setValue}\n//           />\n//         </div>\n//       </div>\n//       <div className=\"menu\">\n//         <div className=\"item\">\n//           {\" \"}\n//           <h1 className=\"item-title\">Publish</h1>\n//           <span>\n//             <b>Status: </b> Draft\n//           </span>\n//           <span>\n//             <b>Visibility: </b> Public\n//           </span>\n//           <input\n//             style={{ display: \"none\" }}\n//             type=\"file\"\n//             id=\"file\"\n//             name=\"\"\n//             onChange={(e) => setFile(e.target.files[0])}\n//           />\n//           <label className=\"file\" htmlFor=\"file\">\n//             Upload Image\n//           </label>\n//           <div className=\"buttons\">\n//             <Button type=\"button\" size=\"sm\" className=\"btn\">\n//               Save Draft\n//             </Button>\n//             <Button size=\"sm\" className=\"btn\" onClick={handleClick}>\n//               Publish\n//             </Button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Create;\n\n// import React, { useContext, useEffect, useReducer, useState } from \"react\";\n// import { useNavigate, useParams } from \"react-router-dom\";\n// import { toast } from \"react-toastify\";\n// import axios from \"axios\";\n// import { Store } from \"../Store\";\n// import { getError } from \"../utils\";\n// import Container from \"react-bootstrap/Container\";\n// import ListGroup from \"react-bootstrap/ListGroup\";\n// import Form from \"react-bootstrap/Form\";\n// import { Helmet } from \"react-helmet-async\";\n// import Rings from \"../components/Rings.jsx\";\n// import Message from \"../components/Message.jsx\";\n// import Button from \"react-bootstrap/Button\";\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case \"FETCH_REQUEST\":\n//       return { ...state, loading: true };\n//     case \"FETCH_SUCCESS\":\n//       return { ...state, loading: false };\n//     case \"FETCH_ERROR\":\n//       return { ...state, loading: false, error: action.payload };\n//     case \"UPDATE_REQUEST\":\n//       return { ...state, loadingUpdate: true };\n//     case \"UPDATE_SUCCESS\":\n//       return { ...state, loadingUpdate: false };\n//     case \"UPDATE_ERROR\":\n//       return { ...state, loadingUpdate: false };\n//     case \"UPLOAD_REQUEST\":\n//       return { ...state, loadingUpload: true, errorUpload: \"\" };\n//     case \"UPLOAD_SUCCESS\":\n//       return {\n//         ...state,\n//         loadingUpload: false,\n//         errorUpload: \"\",\n//       };\n//     case \"UPLOAD_FAIL\":\n//       return { ...state, loadingUpload: false, errorUpload: action.payload };\n\n//     default:\n//       return state;\n//   }\n// };\n// export default function Create() {\n//   const navigate = useNavigate();\n//   const params = useParams(); // /place/:id\n//   const { id: placeId } = params;\n\n//   const { state } = useContext(Store);\n//   const { userInfo } = state;\n//   const [{ loading, error, loadingUpdate, loadingUpload }, dispatch] =\n//     useReducer(reducer, {\n//       loading: true,\n//       error: \"\",\n//     });\n\n//   const [title, setTitle] = useState(\"\");\n//   const [where_to_stay, setWhereToStay] = useState(\"\");\n//   const [description, setDescription] = useState(\"\");\n//   const [image_url1, setImageUrl1] = useState(\"\");\n//   const [image_url2, setImageUrl2] = useState(\"\");\n//   const [image_url3, setImageUrl3] = useState(\"\");\n//   const [images, setImages] = useState(\"\");\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         dispatch({ type: \"FETCH_REQUEST\" });\n//         const { data } = await axios.get(\n//           `http://localhost:8090/api/v1/places/${placeId}`\n//         );\n//         setTitle(data.title);\n//         setWhereToStay(data.where_to_stay);\n//         setDescription(data.description);\n//         setImageUrl1(data.image_url1);\n//         setImageUrl2(data.image_url2);\n//         setImageUrl3(data.image_url3);\n\n//         dispatch({ type: \"FETCH_SUCCESS\" });\n//       } catch (err) {\n//         dispatch({\n//           type: \"FETCH_ERROR\",\n//           payload: getError(err),\n//         });\n//       }\n//     };\n//     fetchData();\n//   }, [placeId]);\n\n//   const submitHandler = async (e) => {\n//     e.preventDefault();\n//     try {\n//       dispatch({ type: \"UPDATE_REQUEST\" });\n//       await axios.put(\n//         `http://localhost:8090/api/v1/places`,\n//         {\n//           id: placeId,\n//           title,\n//           where_to_stay,\n//           description,\n//           image_url1,\n//           image_url2,\n//           image_url3,\n//         },\n//         {\n//           headers: { Authorization: `Bearer ${userInfo.access_token}` },\n//         }\n//       );\n//       dispatch({\n//         type: \"UPDATE_SUCCESS\",\n//       });\n//       toast.success(\"Place updated successfully\");\n//       navigate(\"/places\");\n//     } catch (err) {\n//       toast.error(getError(err));\n//       dispatch({ type: \"UPDATE_ERROR\" });\n//     }\n//   };\n//   const uploadFileHandler = async (e, forImages) => {\n//     const file = e.target.files[0];\n//     const bodyFormData = new FormData();\n//     bodyFormData.append(\"file\", file);\n//     try {\n//       dispatch({ type: \"UPLOAD_REQUEST\" });\n//       const { data } = await axios.post(\n//         \"http://localhost:8090/api/v1/upload\",\n//         bodyFormData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//             authorization: `Bearer ${userInfo.access_token}`,\n//           },\n//         }\n//       );\n//       dispatch({ type: \"UPLOAD_SUCCESS\" });\n\n//       if (forImages) {\n//         setImages([...images, data.secure_url]);\n//       } else {\n//         setImageUrl1(data.secure_url);\n//       }\n//       toast.success(\"Image uploaded successfully. click Update to apply it\");\n//     } catch (err) {\n//       toast.error(getError(err));\n//       dispatch({ type: \"UPLOAD_ERROR\", payload: getError(err) });\n//     }\n//   };\n//   const deleteFileHandler = async (fileName, f) => {\n//     console.log(fileName, f);\n//     console.log(images);\n//     console.log(images.filter((x) => x !== fileName));\n//     setImages(images.filter((x) => x !== fileName));\n//     toast.success(\"Image removed successfully. click Update to apply it\");\n//   };\n//   return (\n//     <Container className=\"small-container\">\n//       <Helmet>\n//         <title>Edit Place</title>\n//       </Helmet>\n//       <h1>Edit Place </h1>\n\n//       {loading ? (\n//         <Rings></Rings>\n//       ) : error ? (\n//         <Message variant=\"danger\">{error}</Message>\n//       ) : (\n//         <Form onSubmit={submitHandler}>\n//           <Form.Group className=\"mb-3\" controlId=\"name\">\n//             <Form.Label>Title</Form.Label>\n//             <Form.Control\n//               value={title}\n//               onChange={(e) => setTitle(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"description\">\n//             <Form.Label>Where to stay</Form.Label>\n//             <Form.Control\n//               value={where_to_stay}\n//               onChange={(e) => setWhereToStay(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"description\">\n//             <Form.Label>Description</Form.Label>\n//             <Form.Control\n//               value={description}\n//               onChange={(e) => setDescription(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"name\">\n//             <Form.Label>Image url 1</Form.Label>\n//             <Form.Control\n//               value={image_url1}\n//               onChange={(e) => setImageUrl1(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"image1\">\n//             <Form.Label>Image url 2</Form.Label>\n//             <Form.Control\n//               value={image_url2}\n//               onChange={(e) => setImageUrl2(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"image2\">\n//             <Form.Label>Image url 2</Form.Label>\n//             <Form.Control\n//               value={image_url2}\n//               onChange={(e) => setImageUrl2(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"image3\">\n//             <Form.Label>Image url 2</Form.Label>\n//             <Form.Control\n//               value={image_url3}\n//               onChange={(e) => setImageUrl3(e.target.value)}\n//               required\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"imageFile\">\n//             <Form.Label>Upload Image</Form.Label>\n//             <Form.Control type=\"file\" onChange={uploadFileHandler} />\n//             {loadingUpload && <rings></rings>}\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"additionalImage\">\n//             <Form.Label>Additional Images</Form.Label>\n//             {images.length === 0 && <Message>No image</Message>}\n//             <ListGroup variant=\"flush\">\n//               {images.map((x) => (\n//                 <ListGroup.Item key={x}>\n//                   {x}\n//                   <Button variant=\"light\" onClick={() => deleteFileHandler(x)}>\n//                     <i className=\"fa fa-times-circle\"></i>\n//                   </Button>\n//                 </ListGroup.Item>\n//               ))}\n//             </ListGroup>\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"additionalImageFile\">\n//             <Form.Label>Upload Aditional Image</Form.Label>\n//             <Form.Control\n//               type=\"file\"\n//               onChange={(e) => uploadFileHandler(e, true)}\n//             />\n//             {loadingUpload && <Rings></Rings>}\n//           </Form.Group>\n\n//           <div className=\"mb-3\">\n//             <Button disabled={loadingUpdate} type=\"submit\">\n//               Update\n//             </Button>\n//             {loadingUpdate && <Rings></Rings>}\n//           </div>\n//         </Form>\n//       )}\n//     </Container>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Salom/Desktop/hotel-finder/frontend/src/pages/Create.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import ReactQuill from \"react-quill\";\r\n// import \"react-quill/dist/quill.snow.css\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import moment from \"moment\";\r\n\r\n// const Create = () => {\r\n//   const state = useLocation().state;\r\n//   const [value, setValue] = useState(state?.title || \"\");\r\n//   const [title, setTitle] = useState(state?.description || \"\");\r\n//   const [file, setFile] = useState(null);\r\n//   const [where_to_stay, setWhereToStay] = useState(state?.where_to_stay || \"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const upload = async () => {\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append(\"file\", file);\r\n//       const res = await axios.post(\r\n//         \"http://localhost:8090/api/v1/upload\",\r\n//         formData\r\n//       );\r\n//       return res.data;\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   };\r\n//   const handleClick = async (e) => {\r\n//     e.preventDefault();\r\n//     const imgUrl = await upload();\r\n//     try {\r\n//       state\r\n//         ? await axios.put(`http://localhost:8090/api/v1/places${state.id}`, {\r\n//             title,\r\n//             where_to_stay,\r\n//             description: value,\r\n\r\n//             image_url1: file ? imgUrl : \"\",\r\n//           })\r\n//         : await axios.post(`http://localhost:8090/api/v1/places/`, {\r\n//             title,\r\n//             where_to_stay,\r\n//             description: value,\r\n\r\n//             image_url1: file ? imgUrl : \"\",\r\n//             created_at: moment(Date.now()).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n//           });\r\n//       navigate(\"/\");\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"create-place\">\r\n//       <div className=\"content\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Title\"\r\n//           onChange={(e) => setTitle(e.target.value)}\r\n//         />\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Where to stay\"\r\n//           onChange={(e) => setWhereToStay(e.target.value)}\r\n//         />\r\n//         <div className=\"editorContainer\">\r\n//           <ReactQuill\r\n//             className=\"editor\"\r\n//             theme=\"snow\"\r\n//             value={value}\r\n//             onChange={setValue}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"menu\">\r\n//         <div className=\"item\">\r\n//           {\" \"}\r\n//           <h1 className=\"item-title\">Publish</h1>\r\n//           <span>\r\n//             <b>Status: </b> Draft\r\n//           </span>\r\n//           <span>\r\n//             <b>Visibility: </b> Public\r\n//           </span>\r\n//           <input\r\n//             style={{ display: \"none\" }}\r\n//             type=\"file\"\r\n//             id=\"file\"\r\n//             name=\"\"\r\n//             onChange={(e) => setFile(e.target.files[0])}\r\n//           />\r\n//           <label className=\"file\" htmlFor=\"file\">\r\n//             Upload Image\r\n//           </label>\r\n//           <div className=\"buttons\">\r\n//             <Button type=\"button\" size=\"sm\" className=\"btn\">\r\n//               Save Draft\r\n//             </Button>\r\n//             <Button size=\"sm\" className=\"btn\" onClick={handleClick}>\r\n//               Publish\r\n//             </Button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Create;\r\n\r\n// import React, { useContext, useEffect, useReducer, useState } from \"react\";\r\n// import { useNavigate, useParams } from \"react-router-dom\";\r\n// import { toast } from \"react-toastify\";\r\n// import axios from \"axios\";\r\n// import { Store } from \"../Store\";\r\n// import { getError } from \"../utils\";\r\n// import Container from \"react-bootstrap/Container\";\r\n// import ListGroup from \"react-bootstrap/ListGroup\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import { Helmet } from \"react-helmet-async\";\r\n// import Rings from \"../components/Rings.jsx\";\r\n// import Message from \"../components/Message.jsx\";\r\n// import Button from \"react-bootstrap/Button\";\r\n\r\n// const reducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case \"FETCH_REQUEST\":\r\n//       return { ...state, loading: true };\r\n//     case \"FETCH_SUCCESS\":\r\n//       return { ...state, loading: false };\r\n//     case \"FETCH_ERROR\":\r\n//       return { ...state, loading: false, error: action.payload };\r\n//     case \"UPDATE_REQUEST\":\r\n//       return { ...state, loadingUpdate: true };\r\n//     case \"UPDATE_SUCCESS\":\r\n//       return { ...state, loadingUpdate: false };\r\n//     case \"UPDATE_ERROR\":\r\n//       return { ...state, loadingUpdate: false };\r\n//     case \"UPLOAD_REQUEST\":\r\n//       return { ...state, loadingUpload: true, errorUpload: \"\" };\r\n//     case \"UPLOAD_SUCCESS\":\r\n//       return {\r\n//         ...state,\r\n//         loadingUpload: false,\r\n//         errorUpload: \"\",\r\n//       };\r\n//     case \"UPLOAD_FAIL\":\r\n//       return { ...state, loadingUpload: false, errorUpload: action.payload };\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// export default function Create() {\r\n//   const navigate = useNavigate();\r\n//   const params = useParams(); // /place/:id\r\n//   const { id: placeId } = params;\r\n\r\n//   const { state } = useContext(Store);\r\n//   const { userInfo } = state;\r\n//   const [{ loading, error, loadingUpdate, loadingUpload }, dispatch] =\r\n//     useReducer(reducer, {\r\n//       loading: true,\r\n//       error: \"\",\r\n//     });\r\n\r\n//   const [title, setTitle] = useState(\"\");\r\n//   const [where_to_stay, setWhereToStay] = useState(\"\");\r\n//   const [description, setDescription] = useState(\"\");\r\n//   const [image_url1, setImageUrl1] = useState(\"\");\r\n//   const [image_url2, setImageUrl2] = useState(\"\");\r\n//   const [image_url3, setImageUrl3] = useState(\"\");\r\n//   const [images, setImages] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         dispatch({ type: \"FETCH_REQUEST\" });\r\n//         const { data } = await axios.get(\r\n//           `http://localhost:8090/api/v1/places/${placeId}`\r\n//         );\r\n//         setTitle(data.title);\r\n//         setWhereToStay(data.where_to_stay);\r\n//         setDescription(data.description);\r\n//         setImageUrl1(data.image_url1);\r\n//         setImageUrl2(data.image_url2);\r\n//         setImageUrl3(data.image_url3);\r\n\r\n//         dispatch({ type: \"FETCH_SUCCESS\" });\r\n//       } catch (err) {\r\n//         dispatch({\r\n//           type: \"FETCH_ERROR\",\r\n//           payload: getError(err),\r\n//         });\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//   }, [placeId]);\r\n\r\n//   const submitHandler = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       dispatch({ type: \"UPDATE_REQUEST\" });\r\n//       await axios.put(\r\n//         `http://localhost:8090/api/v1/places`,\r\n//         {\r\n//           id: placeId,\r\n//           title,\r\n//           where_to_stay,\r\n//           description,\r\n//           image_url1,\r\n//           image_url2,\r\n//           image_url3,\r\n//         },\r\n//         {\r\n//           headers: { Authorization: `Bearer ${userInfo.access_token}` },\r\n//         }\r\n//       );\r\n//       dispatch({\r\n//         type: \"UPDATE_SUCCESS\",\r\n//       });\r\n//       toast.success(\"Place updated successfully\");\r\n//       navigate(\"/places\");\r\n//     } catch (err) {\r\n//       toast.error(getError(err));\r\n//       dispatch({ type: \"UPDATE_ERROR\" });\r\n//     }\r\n//   };\r\n//   const uploadFileHandler = async (e, forImages) => {\r\n//     const file = e.target.files[0];\r\n//     const bodyFormData = new FormData();\r\n//     bodyFormData.append(\"file\", file);\r\n//     try {\r\n//       dispatch({ type: \"UPLOAD_REQUEST\" });\r\n//       const { data } = await axios.post(\r\n//         \"http://localhost:8090/api/v1/upload\",\r\n//         bodyFormData,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"multipart/form-data\",\r\n//             authorization: `Bearer ${userInfo.access_token}`,\r\n//           },\r\n//         }\r\n//       );\r\n//       dispatch({ type: \"UPLOAD_SUCCESS\" });\r\n\r\n//       if (forImages) {\r\n//         setImages([...images, data.secure_url]);\r\n//       } else {\r\n//         setImageUrl1(data.secure_url);\r\n//       }\r\n//       toast.success(\"Image uploaded successfully. click Update to apply it\");\r\n//     } catch (err) {\r\n//       toast.error(getError(err));\r\n//       dispatch({ type: \"UPLOAD_ERROR\", payload: getError(err) });\r\n//     }\r\n//   };\r\n//   const deleteFileHandler = async (fileName, f) => {\r\n//     console.log(fileName, f);\r\n//     console.log(images);\r\n//     console.log(images.filter((x) => x !== fileName));\r\n//     setImages(images.filter((x) => x !== fileName));\r\n//     toast.success(\"Image removed successfully. click Update to apply it\");\r\n//   };\r\n//   return (\r\n//     <Container className=\"small-container\">\r\n//       <Helmet>\r\n//         <title>Edit Place</title>\r\n//       </Helmet>\r\n//       <h1>Edit Place </h1>\r\n\r\n//       {loading ? (\r\n//         <Rings></Rings>\r\n//       ) : error ? (\r\n//         <Message variant=\"danger\">{error}</Message>\r\n//       ) : (\r\n//         <Form onSubmit={submitHandler}>\r\n//           <Form.Group className=\"mb-3\" controlId=\"name\">\r\n//             <Form.Label>Title</Form.Label>\r\n//             <Form.Control\r\n//               value={title}\r\n//               onChange={(e) => setTitle(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"description\">\r\n//             <Form.Label>Where to stay</Form.Label>\r\n//             <Form.Control\r\n//               value={where_to_stay}\r\n//               onChange={(e) => setWhereToStay(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"description\">\r\n//             <Form.Label>Description</Form.Label>\r\n//             <Form.Control\r\n//               value={description}\r\n//               onChange={(e) => setDescription(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"name\">\r\n//             <Form.Label>Image url 1</Form.Label>\r\n//             <Form.Control\r\n//               value={image_url1}\r\n//               onChange={(e) => setImageUrl1(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"image1\">\r\n//             <Form.Label>Image url 2</Form.Label>\r\n//             <Form.Control\r\n//               value={image_url2}\r\n//               onChange={(e) => setImageUrl2(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"image2\">\r\n//             <Form.Label>Image url 2</Form.Label>\r\n//             <Form.Control\r\n//               value={image_url2}\r\n//               onChange={(e) => setImageUrl2(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"image3\">\r\n//             <Form.Label>Image url 2</Form.Label>\r\n//             <Form.Control\r\n//               value={image_url3}\r\n//               onChange={(e) => setImageUrl3(e.target.value)}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"imageFile\">\r\n//             <Form.Label>Upload Image</Form.Label>\r\n//             <Form.Control type=\"file\" onChange={uploadFileHandler} />\r\n//             {loadingUpload && <rings></rings>}\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"additionalImage\">\r\n//             <Form.Label>Additional Images</Form.Label>\r\n//             {images.length === 0 && <Message>No image</Message>}\r\n//             <ListGroup variant=\"flush\">\r\n//               {images.map((x) => (\r\n//                 <ListGroup.Item key={x}>\r\n//                   {x}\r\n//                   <Button variant=\"light\" onClick={() => deleteFileHandler(x)}>\r\n//                     <i className=\"fa fa-times-circle\"></i>\r\n//                   </Button>\r\n//                 </ListGroup.Item>\r\n//               ))}\r\n//             </ListGroup>\r\n//           </Form.Group>\r\n//           <Form.Group className=\"mb-3\" controlId=\"additionalImageFile\">\r\n//             <Form.Label>Upload Aditional Image</Form.Label>\r\n//             <Form.Control\r\n//               type=\"file\"\r\n//               onChange={(e) => uploadFileHandler(e, true)}\r\n//             />\r\n//             {loadingUpload && <Rings></Rings>}\r\n//           </Form.Group>\r\n\r\n//           <div className=\"mb-3\">\r\n//             <Button disabled={loadingUpdate} type=\"submit\">\r\n//               Update\r\n//             </Button>\r\n//             {loadingUpdate && <Rings></Rings>}\r\n//           </div>\r\n//         </Form>\r\n//       )}\r\n//     </Container>\r\n//   );\r\n// }\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}